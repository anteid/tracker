#ifndef GPSManager_h
#define GPSManager_h

#include <Types.h>
#include <UBX_Parser.h>

const int UBX_HEADER_OFFSET   = 2;
const int UBX_CLASS_ID_OFFSET = 2;
const int UBX_FOOTER_OFFSET   = 2;
const int UBX_LENGTH_OFFSET   = 2;


const byte UBX_CFG_NAV5[] =
{
  /* See ublox-M8 documentation               */
  /*                         v dynamic model  */
  0x06, 0x24, 0xFF, 0xFF, 0x08, 0x02, 0x00, 0x00,
  0x00, 0x00, 0x10, 0x27, 0x00, 0x00, 0x05, 0x00,
  0xFA, 0x00, 0xFA, 0x00, 0x64, 0x00, 0X2C, 0x01,
  0X00, 0x3C, 0x00, 0x1C, 0x00, 0x00, 0xC8, 0x00,
  0x00, 0x00, 0x00, 0x00,0x00, 0x00
};

const byte UBX_CFG_NAVX5[] =
{
  0x06, 0x23, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x03, 0x02, 0x03, 0x14, 0x1C, 0x00,
  0x00, 0x01, 0x00, 0x00, 0xDC, 0x06, 0X00, 0x00,
  0X00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x64,
  0x64, 0x00, 0x00, 0x01, 0x10, 0x00, 0x00, 0x00,
  0x00, 0x00
};
const byte UBX_CFG_RATE[] =
{
  0x06, 0x08, 0xC8, 0x00, 0x01, 0x00, 0x01, 0x00
};

const byte UBX_CFG_MSG[] =
{
  0x06, 0x01, 0x01, 0x02, 0x00 // NAV-PVT
};

const byte UBX_CFG_CFG[] =
{
  0x06, 0x09, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x1e,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

class GPSManager : public UBX_Parser
{

public:
  GPSManager();
  void flash();
  void process();
  void prepareNextMeasure();
  void updateTimestamp();
  bool isReady();
  GPSData_t getData();
  void handle_NAV_PVT(byte fixType,
              byte numSV,
              long lon,
              long lat,
              long height,
              long hMSL,
              unsigned long hAcc,
              unsigned long vAcc,
              long velN,
              long velE,
              long velD,
              unsigned long sAcc);
private:
  GPSData_t data;
  void writeUBX(const byte msg[], int size); /* TODO tests & define output port */
};

#endif
